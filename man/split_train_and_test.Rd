% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/split_train_and_test.R
\name{split_train_and_test}
\alias{split_train_and_test}
\title{Split train and test data}
\usage{
split_train_and_test(
  matrix,
  obs = NROW(matrix),
  train.prop = 0.5,
  test.prop = 0.5,
  seeds = 1
)
}
\arguments{
\item{matrix}{An N x M matrix, containing N rows (observations) and M columns (data features)}

\item{obs}{An integer value specifying how many rows from the original data set should be preserved. (See \code{size} parameter to \href{https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/sample}{sample} for details)}

\item{train.prop}{A real number between 0 and 1, describing the preferred proportion of training data}

\item{test.prop}{A real number between 0 and 1, describing the preferred proportion of test data}

\item{seeds}{An integer vector of seed values, for use in randomly sampling observations into train and test subsets}
}
\value{
A \strong{list} containing the following results:
\item{\code{counts}}{a table containing raw counts of train and test observations}
\item{\code{contingency.table}}{a contingency table, describing the proportion of observations assigned to train and test sets}
\item{\code{test}}{a matrix holding the test data subset, with the same number of columns as the input matrix, and one row per sampled observation}
\item{\code{train}}{a matrix holding the train data subset, with the same number of columns as the input matrix, and one row per sampled observation}
}
\description{
Splits a data matrix into two subsets, returning train and test subsets
along with some basic summary statistics. Users may specify preferred
sampling proportions, and may provide an integer vector of seed values which
will be used in selecting the split that most closely approaches the desired
proportions. By default, split_train_and_test splits into 50\% TRAIN and 50\% TEST.
}
\examples{
# By default, split_train_and_test attempts to split into 50\% TRAIN and 50\% TEST, and iterates once.
default <- split_train_and_test(iris)
default$contingency.table

# Increasing the number of seeds increases the likelihood of an optimal split
many.seeds <- split_train_and_test(iris, seeds=1:113)
many.seeds$contingency.table

# Pass proportions if you prefer a different split
eighty.twenty <- split_train_and_test(iris, train.prop=0.8, test.prop=0.2)
eighty.twenty$contingency.table

# Use `obs` to subset your data while sampling
subset <- split_train_and_test(iris, obs=100)  ## produces ~50 TRAIN and ~50 TEST observations
subset$counts

}
